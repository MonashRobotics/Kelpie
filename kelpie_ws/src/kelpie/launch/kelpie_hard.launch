<launch>
    <arg name="is_sim" default="0"/>
    <arg name="is_physical" default="1"/>
    <arg name="use_joystick" default="1"/>
    <arg name="use_keyboard" default="0"/>
    <arg name="serial_port" default="/dev/ttyS0"/>
    <arg name="use_imu" default="1"/>

    <!-- If want to use the joystick, launch joystick node -->

    <node pkg="joy" type="joy_node" name="JOYSTICK">
        <param name="autorepeat_rate" value="30"/>
        <param name="joy_node/dev" value="/dev/input/js0"/>
        <arg name="coalesce_interval" value="0.02"/>

    </node>

    <!-- launch video stream -->
   <include file="$(find video_stream_opencv)/launch/camera.launch" >
        <!-- node name and ros graph name -->
        <arg name="camera_name" value="right_cam" />
        <!-- means video device 0, /dev/video0 -->
        <arg name="video_stream_provider" value="0" />
        <!-- set camera fps to (if the device allows) -->
        <arg name="set_camera_fps" value="30"/>
        <!-- set buffer queue size of frame capturing to -->
        <arg name="buffer_queue_size" value="1" />
        <!-- throttling the querying of frames to -->
        <arg name="fps" value="30" />
        <!-- setting frame_id -->
        <arg name="frame_id" value="webcam" />
        <!-- camera info loading, take care as it needs the "file:///" at the start , e.g.:
        "file:///$(find your_camera_package)/config/your_camera.yaml" -->
        <arg name="camera_info_url" value="" />
        <!-- flip the image horizontally (mirror it) -->
        <arg name="flip_horizontal" value="false" />
        <!-- flip the image vertically -->
        <arg name="flip_vertical" value="false" />
        <!-- visualize on an image_view window the stream generated -->
        <arg name="visualize" value="false" />
   </include>

    
    <!-- Kelpie Driver -->
    <node pkg="kelpie" type="main_driver.py" name="kelpie" args="$(arg is_sim) $(arg is_physical) $(arg use_imu)" output="screen"/>
    <node pkg="kelpie_hardware_interface" type="main.py" name="hardware"/>
</launch>
    
